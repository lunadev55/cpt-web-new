<div class="container register col-md-12">
<div class="page-header"><h1>Ativação de conta</h1></div>


<%= form_tag(new_active_request_path, disabled: true, remote: true, class: "directUpload",format: :js ,method: :post, data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host }) %>
Parte das funcionalidades associadas à exchange de moedas virtuais necessita que os usuários ativem suas contas com o intuito da verificação das informações. <br>
Para prosseguir, utilize o formulário abaixo para realizar upload de documentos.<br>
<font class="red">Esteja atento! </font>Caso alguma informação dos documentos prestados não seja compatível com as informações cadastrais (nome / CPF), a verificação por parte da Cripto Câmbio substituirá os dados fornecidos inicialmente de forma permanente.<br>
<b class="red">Ao prosseguir, você concorda estar de acordo com os </b><a data-toggle="modal" data-target="#termsModal" class="pointer hover-link"><i class="fa fa-file-text" aria-hidden="true"></i> Termos de uso / Resposabilidade</a>.<br>
Os arquivos com seus dados pessoais são apagados de nosso sistema assim que uma solicitação é respondida. Você receberá um email em seu email cadastrado informando detalhes sobre sua solicitação.
  <%= render 'shared/errors', object: @request %>
<div class="row">
    <div class="col-md-7 col-xs-7">
  <div class="form-group">
    <div class="row">
        <div class="col-md-12 col-xs-12">
        <fieldset>
            <legend><%= label_tag :photo, "Foto de Identidade" %></legend>
            <p>Protege contra <b>falsificação</b> e ações de estelionato.<br>
            Você deve enviar uma foto com <b>frente / verso</b> de seu documento de identidade em um único arquivo de maneira legível.
            <%= file_field_tag :photo, required: true %></p>
        </fieldset>
        </div>
    </div>
    
    
  </div>

  <div class="form-group">
    <div class="row">
        <div class="col-md-12 col-xs-12">
        <fieldset>
            <legend><%= label_tag :selfie, "Selfie com Identidade" %></legend>
            <p>Protege contra pessoas tentando se passar por você.<br>
            Você deve enviar uma foto sua segurando sua identidade (a mesma enviada no arquivo acima) de maneira legível.
            <%= file_field_tag :selfie, required: true %></p>
        </fieldset>
        </div>
    </div>
  </div>

    <%= submit_tag "Submeter", class: 'submit_button_active btn btn-primary btn-lg' %>
  <br/><br/>
  <%= link_to 'Por que vejo isto?', new_password_reset_path, class: 'btn btn-sm btn-default' %>
</form>
</div>
</div>
</div>
        

<script>
$(function aws() {
  $('*').find("input:file").each(function(i, elem) {
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var submitButton = $('.submit_button_active');
    var progressBar  = $(`<div class='bar ${fileInput.prop("name")}'></div>`);
    var barContainer = $(`<div class='progress ${fileInput.prop("name")}'></div>`).append(progressBar);
    fileInput.after(barContainer);
    console.log("começando")
    fileInput.fileupload({
      fileInput:       fileInput,
      url:             "https://cptcambio.s3.us-east-2.amazonaws.com/",
      //url:             form.data('url'),
      type:            'POST',
      autoUpload:       true,
      formData:         form.data('form-data'),
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
          css('background', 'green').
          css('display', 'block').
          css('width', '0%').
          text("Carregando...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Upload completo");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//' + form.data('host') + '/' + key;
        //var url = 'cptcambio.s3.us-east-2.amazonaws.com/' + key

        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
        form.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  });
});
</script>